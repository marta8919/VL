{"ast":null,"code":"var _jsxFileName = \"/Users/marta.gilabert.guzman/Desktop/VoiceLine/challenge/src/components/Recording.jsx\";\nimport React, { Component } from 'react';\nimport { Recorder } from 'react-voice-recorder';\nimport 'react-voice-recorder/dist/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Recording extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      audioDetails: {\n        url: null,\n        blob: null,\n        chunks: null,\n        duration: {\n          h: 0,\n          m: 0,\n          s: 0\n        }\n      }\n    };\n  }\n\n  handleAudioStop(data) {\n    console.log(data);\n    this.setState({\n      audioDetails: data\n    });\n  }\n\n  handleAudioUpload(file) {\n    console.log(file);\n  }\n\n  handleRest() {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    };\n    this.setState({\n      audioDetails: reset\n    });\n  }\n\n  render() {\n    const {\n      recordState\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Recorder, {\n        record: true,\n        title: \"New recording\",\n        audioURL: this.state.audioDetails.url,\n        showUIAudio: true,\n        handleAudioStop: data => this.handleAudioStop(data),\n        handleAudioUpload: data => this.handleAudioUpload(data),\n        handleRest: () => this.handleRest()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Recording;","map":{"version":3,"sources":["/Users/marta.gilabert.guzman/Desktop/VoiceLine/challenge/src/components/Recording.jsx"],"names":["React","Component","Recorder","Recording","state","audioDetails","url","blob","chunks","duration","h","m","s","handleAudioStop","data","console","log","setState","handleAudioUpload","file","handleRest","reset","render","recordState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,OAAO,qCAAP;;;AAGA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BG,KAF8B,GAEtB;AACJC,MAAAA,YAAY,EAAE;AACVC,QAAAA,GAAG,EAAE,IADK;AAEVC,QAAAA,IAAI,EAAE,IAFI;AAGVC,QAAAA,MAAM,EAAE,IAHE;AAIVC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,CAAC,EAAE,CADK;AAERC,UAAAA,CAAC,EAAE,CAFK;AAGRC,UAAAA,CAAC,EAAE;AAHK;AAJA;AADV,KAFsB;AAAA;;AAe9BC,EAAAA,eAAe,CAACC,IAAD,EAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAKG,QAAL,CAAc;AAAEZ,MAAAA,YAAY,EAAES;AAAhB,KAAd;AACH;;AACDI,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AACpBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,UAAMC,KAAK,GAAG;AACZf,MAAAA,GAAG,EAAE,IADO;AAEZC,MAAAA,IAAI,EAAE,IAFM;AAGZC,MAAAA,MAAM,EAAE,IAHI;AAIZC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,CAAC,EAAE,CADK;AAERC,QAAAA,CAAC,EAAE,CAFK;AAGRC,QAAAA,CAAC,EAAE;AAHK;AAJE,KAAd;AAUA,SAAKK,QAAL,CAAc;AAAEZ,MAAAA,YAAY,EAAEgB;AAAhB,KAAd;AACD;;AAELC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKnB,KAA7B;AAEA,wBACE;AAAA,6BACI,QAAC,QAAD;AACN,QAAA,MAAM,EAAE,IADF;AAEN,QAAA,KAAK,EAAE,eAFD;AAGN,QAAA,QAAQ,EAAE,KAAKA,KAAL,CAAWC,YAAX,CAAwBC,GAH5B;AAIN,QAAA,WAAW,MAJL;AAKN,QAAA,eAAe,EAAEQ,IAAI,IAAI,KAAKD,eAAL,CAAqBC,IAArB,CALnB;AAMN,QAAA,iBAAiB,EAAEA,IAAI,IAAI,KAAKI,iBAAL,CAAuBJ,IAAvB,CANrB;AAON,QAAA,UAAU,EAAE,MAAM,KAAKM,UAAL;AAPZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AApD+B;;AAuDlC,eAAejB,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Recorder} from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\n \n\nclass Recording extends Component {\n\n    state = {\n        audioDetails: {\n            url: null,\n            blob: null,\n            chunks: null,\n            duration: {\n              h: 0,\n              m: 0,\n              s: 0\n            }\n          }\n    }\n\n    handleAudioStop(data){\n        console.log(data)\n        this.setState({ audioDetails: data });\n    }\n    handleAudioUpload(file) {\n        console.log(file);\n    }\n    handleRest() {\n        const reset = {\n          url: null,\n          blob: null,\n          chunks: null,\n          duration: {\n            h: 0,\n            m: 0,\n            s: 0\n          }\n        };\n        this.setState({ audioDetails: reset });\n      }\n \n  render() {\n    const { recordState } = this.state\n \n    return (\n      <div>\n          <Recorder\n    record={true}\n    title={\"New recording\"}\n    audioURL={this.state.audioDetails.url}\n    showUIAudio\n    handleAudioStop={data => this.handleAudioStop(data)}\n    handleAudioUpload={data => this.handleAudioUpload(data)}\n    handleRest={() => this.handleRest()} \n/>\n      </div>\n    )\n  }\n}\n\nexport default Recording;"]},"metadata":{},"sourceType":"module"}