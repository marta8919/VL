{"ast":null,"code":"import React__default, { Component } from 'react';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar microphone = require(\"./microphone~MMbrAzIj.svg\");\n\nrequire(\"./stop~lbXSmHgG.png\");\n\nrequire(\"./pause~xDleoKju.png\");\n\nrequire(\"./play-button~KMZeLnuO.png\");\n\nrequire(\"./close~bbahVpKh.png\");\n\nvar styles = {\n  \"recorder_library_box\": \"_1ceqH\",\n  \"recorder_box\": \"_2fG9h\",\n  \"recorder_box_inner\": \"_dt3-T\",\n  \"mic_icon\": \"_1dpop\",\n  \"microphone_icon_sec\": \"_3neb0\",\n  \"mic_icon_svg\": \"_3wi1g\",\n  \"reco_header\": \"_1lB9c\",\n  \"h2\": \"_2N9dq\",\n  \"close_icons\": \"_3-aC9\",\n  \"record_section\": \"_3bC73\",\n  \"duration_section\": \"_1YOWG\",\n  \"btn_wrapper\": \"_1Yplu\",\n  \"btn\": \"_1Pz2d\",\n  \"clear_btn\": \"_2gd2_\",\n  \"duration\": \"_f2DT8\",\n  \"recorder_page_box\": \"_17RTH\",\n  \"help\": \"_eV_dK\",\n  \"record_controller\": \"_qxztz\",\n  \"icons\": \"_2uz65\",\n  \"stop\": \"_1bSom\",\n  \"pause\": \"_3nQu5\",\n  \"play_icons\": \"_3O0Io\",\n  \"pause_icons\": \"_2ACrw\",\n  \"stop_icon\": \"_oEOY-\"\n};\nvar audioType = \"audio/*\";\n\nvar Recorder = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Recorder, _Component);\n\n  function Recorder(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      time: {},\n      seconds: 0,\n      isPaused: false,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Recorder.prototype;\n\n  _proto.handleAudioPause = function handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({\n      pauseRecord: true\n    });\n  };\n\n  _proto.handleAudioStart = function handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({\n      pauseRecord: false\n    });\n  };\n\n  _proto.startTimer = function startTimer() {\n    this.timer = setInterval(this.countDown, 1000);\n  };\n\n  _proto.countDown = function countDown() {\n    var seconds = this.state.seconds + 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    });\n  };\n\n  _proto.secondsToTime = function secondsToTime(secs) {\n    var hours = Math.floor(secs / (60 * 60));\n    var divisor_for_minutes = secs % (60 * 60);\n    var minutes = Math.floor(divisor_for_minutes / 60);\n    var divisor_for_seconds = divisor_for_minutes % 60;\n    var seconds = Math.ceil(divisor_for_seconds);\n    var obj = {\n      h: hours,\n      m: minutes,\n      s: seconds\n    };\n    return obj;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    try {\n      var _this3 = this;\n\n      console.log(navigator.mediaDevices);\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n      var _temp2 = function () {\n        if (navigator.mediaDevices) {\n          return Promise.resolve(navigator.mediaDevices.getUserMedia({\n            audio: true\n          })).then(function (stream) {\n            _this3.mediaRecorder = new MediaRecorder(stream);\n            _this3.chunks = [];\n\n            _this3.mediaRecorder.ondataavailable = function (e) {\n              if (e.data && e.data.size > 0) {\n                _this3.chunks.push(e.data);\n              }\n            };\n          });\n        } else {\n          _this3.setState({\n            medianotFound: true\n          });\n\n          console.log(\"Media Decives will work only with SSL.....\");\n        }\n      }();\n\n      return Promise.resolve(_temp2 && _temp2.then ? _temp2.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.startRecording = function startRecording(e) {\n    e.preventDefault();\n    this.chunks = [];\n    this.mediaRecorder.start(10);\n    this.startTimer();\n    this.setState({\n      recording: true\n    });\n  };\n\n  _proto.stopRecording = function stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({\n      time: {}\n    });\n    e.preventDefault();\n    this.mediaRecorder.stop();\n    this.setState({\n      recording: false\n    });\n    this.saveAudio();\n  };\n\n  _proto.handleRest = function handleRest(e) {\n    var _this4 = this;\n\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n\n    this.setState({\n      time: {},\n      seconds: 0,\n      isPaused: false,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, function () {\n      _this4.props.handleRest(_this4.state);\n    });\n  };\n\n  _proto.saveAudio = function saveAudio() {\n    var blob = new Blob(this.chunks, {\n      type: audioType\n    });\n    var audioURL = window.URL.createObjectURL(blob);\n    var audios = [audioURL];\n    this.setState({\n      audios: audios,\n      audioBlob: blob\n    });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  };\n\n  _proto.render = function render() {\n    var _this5 = this;\n\n    var _this$state = this.state,\n        recording = _this$state.recording,\n        audios = _this$state.audios,\n        time = _this$state.time,\n        medianotFound = _this$state.medianotFound,\n        pauseRecord = _this$state.pauseRecord;\n    var _this$props = this.props,\n        showUIAudio = _this$props.showUIAudio,\n        title = _this$props.title,\n        audioURL = _this$props.audioURL;\n    console.log(microphone);\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_library_box\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_box\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_box_inner\n    }, !this.props.hideHeader ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.reco_header\n    }, /*#__PURE__*/React__default.createElement(\"h2\", {\n      className: styles.h2\n    }, title), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.close_icons\n    })) : null, !medianotFound ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.record_section\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.btn_wrapper\n    }, /*#__PURE__*/React__default.createElement(\"button\", {\n      onClick: function onClick() {\n        return _this5.props.handleAudioUpload(_this5.state.audioBlob);\n      },\n      className: styles.btn + \" \" + styles.upload_btn\n    }, \"Upload\"), /*#__PURE__*/React__default.createElement(\"button\", {\n      onClick: function onClick(e) {\n        return _this5.handleRest(e);\n      },\n      className: styles.btn + \" \" + styles.clear_btn\n    }, \"Clear\")), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.duration_section\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.audio_section\n    }, audioURL !== null && showUIAudio ? /*#__PURE__*/React__default.createElement(\"audio\", {\n      controls: true\n    }, /*#__PURE__*/React__default.createElement(\"source\", {\n      src: audios[0],\n      type: \"audio/ogg\"\n    }), /*#__PURE__*/React__default.createElement(\"source\", {\n      src: audios[0],\n      type: \"audio/mpeg\"\n    })) : null), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.duration\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.mins\n    }, time.m !== undefined ? \"\" + (time.m <= 9 ? \"0\" + time.m : time.m) : \"00\"), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.divider\n    }, \":\"), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.secs\n    }, time.s !== undefined ? \"\" + (time.s <= 9 ? \"0\" + time.s : time.s) : \"00\")), !recording ? /*#__PURE__*/React__default.createElement(\"p\", {\n      className: styles.help\n    }, \"Press the microphone to record\") : null), !recording ? /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: function onClick(e) {\n        return _this5.startRecording(e);\n      },\n      href: \" #\",\n      className: styles.mic_icon\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.microphone_icon_sec\n    }, /*#__PURE__*/React__default.createElement(\"svg\", {\n      className: styles.mic_icon_svg,\n      version: \"1.1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      x: \"0px\",\n      y: \"0px\",\n      viewBox: \"0 0 1000 1000\",\n      enableBackground: \"new 0 0 1000 1000\"\n    }, /*#__PURE__*/React__default.createElement(\"g\", null, /*#__PURE__*/React__default.createElement(\"path\", {\n      d: \"M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z\"\n    }))))) : /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.record_controller\n    }, /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: function onClick(e) {\n        return _this5.stopRecording(e);\n      },\n      href: \" #\",\n      className: styles.icons + \" \" + styles.stop\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.stop_icon\n    })), /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: !pauseRecord ? function (e) {\n        return _this5.handleAudioPause(e);\n      } : function (e) {\n        return _this5.handleAudioStart(e);\n      },\n      href: \" #\",\n      className: styles.icons + \" \" + styles.pause\n    }, pauseRecord ? /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.play_icons\n    }) : /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.pause_icons\n    })))) : /*#__PURE__*/React__default.createElement(\"p\", {\n      style: {\n        color: \"#fff\",\n        marginTop: 30,\n        fontSize: 25\n      }\n    }, \"Seems the site is Non-SSL\"))));\n  };\n\n  return Recorder;\n}(Component);\n\nRecorder.defaultProps = {\n  hideHeader: false\n};\nexport { Recorder };","map":{"version":3,"sources":["../src/imgs/stop.png","../src/imgs/pause.png","../src/imgs/play-button.png","../src/imgs/close.png","../src/components/Recorder.js"],"names":["require","audioType","Recorder","Component","time","seconds","isPaused","recording","medianotFound","audios","audioBlob","handleAudioPause","e","clearInterval","pauseRecord","handleAudioStart","startTimer","setInterval","countDown","secondsToTime","hours","Math","secs","divisor_for_minutes","minutes","divisor_for_seconds","obj","h","m","s","componentDidMount","console","navigator","audio","startRecording","stopRecording","handleRest","saveAudio","blob","type","audioURL","window","url","chunks","duration","render","showUIAudio","title","styles","recorder_library_box","recorder_box","recorder_box_inner","reco_header","h2","close_icons","record_section","btn_wrapper","upload_btn","clear_btn","duration_section","audio_section","mins","divider","help","mic_icon","microphone_icon_sec","record_controller","stop","stop_icon","pause","play_icons","pause_icons","color","marginTop","fontSize","hideHeader"],"mappings":"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","sourcesContent":["/* loaded by smart-asset */\nexport default require(\"./stop~lbXSmHgG.png\")","/* loaded by smart-asset */\nexport default require(\"./pause~xDleoKju.png\")","/* loaded by smart-asset */\nexport default require(\"./play-button~KMZeLnuO.png\")","/* loaded by smart-asset */\nexport default require(\"./close~bbahVpKh.png\")","import React, { Component } from \"react\";\nimport microphone from './../imgs/microphone.svg';\nimport stopIcon from './../imgs/stop.png';\nimport pauseIcons from './../imgs/pause.png';\nimport playIcons from './../imgs/play-button.png';\nimport closeIcons from './../imgs/close.png';\nimport styles from './../styles.module.css';\nconst audioType = \"audio/*\";\n\nclass Recorder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      seconds: 0,\n      isPaused: false,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({ pauseRecord: true });\n  }\n  handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({ pauseRecord: false });\n  }\n\n  startTimer() {\n    //if (this.timer === 0 && this.state.seconds > 0) {\n    this.timer = setInterval(this.countDown, 1000);\n    //}\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds + 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    });\n  }\n\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds\n    };\n    return obj;\n  }\n\n  async componentDidMount() {\n    console.log(navigator.mediaDevices);\n    navigator.getUserMedia =\n      navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia;\n    if (navigator.mediaDevices) {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      this.mediaRecorder = new MediaRecorder(stream);\n      this.chunks = [];\n      this.mediaRecorder.ondataavailable = e => {\n        if (e.data && e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      };\n    } else {\n      this.setState({ medianotFound: true });\n      console.log(\"Media Decives will work only with SSL.....\");\n    }\n  }\n\n  startRecording(e) {\n    e.preventDefault();\n    // wipe old data chunks\n    this.chunks = [];\n    // start recorder with 10ms buffer\n    this.mediaRecorder.start(10);\n    this.startTimer();\n    // say that we're recording\n    this.setState({ recording: true });\n  }\n\n  stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({ time: {} });\n    e.preventDefault();\n    // stop the recorder\n    this.mediaRecorder.stop();\n    // say that we're not recording\n    this.setState({ recording: false });\n    // save the video to memory\n    this.saveAudio();\n  }\n\n  handleRest(e) {\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n    this.setState({\n      time: {},\n      seconds: 0,\n      isPaused: false,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, () => {\n\n      this.props.handleRest(this.state);\n    });\n\n  }\n\n  saveAudio() {\n    // convert saved chunks to blob\n    const blob = new Blob(this.chunks, { type: audioType });\n    // generate video url from blob\n    const audioURL = window.URL.createObjectURL(blob);\n    // append videoURL to list of saved videos for rendering\n    const audios = [audioURL];\n    this.setState({ audios, audioBlob: blob });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  }\n\n  render() {\n    const { recording, audios, time, medianotFound, pauseRecord } = this.state;\n    const { showUIAudio, title, audioURL } = this.props;\n    console.log(microphone)\n    return (\n      <div className={styles.recorder_library_box}>\n        <div className={styles.recorder_box}>\n          <div className={styles.recorder_box_inner}>\n            {!this.props.hideHeader ?\n              <div className={styles.reco_header}>\n                <h2 className={styles.h2}>{title}</h2>\n                <span className={styles.close_icons}>\n\n                  {/* <img src={closeIcons} width={20} height={20} alt=\"Close icons\" /> */}\n                </span>\n              </div> : null}\n            {!medianotFound ? (\n              <div className={styles.record_section}>\n                <div className={styles.btn_wrapper}>\n                  <button\n                    onClick={() =>\n                      this.props.handleAudioUpload(this.state.audioBlob)\n                    }\n                    className={`${styles.btn} ${styles.upload_btn}`}\n                  >\n                    Upload\n                  </button>\n                  <button\n                    onClick={(e) => this.handleRest(e)}\n                    className={`${styles.btn} ${styles.clear_btn}`}\n                  >\n                    Clear\n                  </button>\n                </div>\n                <div className={styles.duration_section}>\n                  <div className={styles.audio_section}>\n                    {audioURL !== null && showUIAudio ? (\n                      <audio controls>\n                        <source src={audios[0]} type=\"audio/ogg\" />\n                        <source src={audios[0]} type=\"audio/mpeg\" />\n                      </audio>\n                    ) : null}\n                  </div>\n                  <div className={styles.duration}>\n                    <span className={styles.mins}>\n                      {time.m !== undefined\n                        ? `${time.m <= 9 ? \"0\" + time.m : time.m}`\n                        : \"00\"}\n                    </span>\n                    <span className={styles.divider}>:</span>\n                    <span className={styles.secs}>\n                      {time.s !== undefined\n                        ? `${time.s <= 9 ? \"0\" + time.s : time.s}`\n                        : \"00\"}\n                    </span>\n                  </div>\n                  {!recording ? (\n                    <p className={styles.help}>Press the microphone to record</p>\n                  ) : null}\n                </div>\n                {!recording ? (\n                  <a\n                    onClick={e => this.startRecording(e)}\n                    href=\" #\"\n                    className={styles.mic_icon}\n                  >\n                    {/* <img src={microphone} width={30} height={30} alt=\"Microphone icons\" /> */}\n                    <span className={styles.microphone_icon_sec}>\n                      <svg className={styles.mic_icon_svg}  version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enableBackground=\"new 0 0 1000 1000\" >\n                        <g>\n                          <path d=\"M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z\" />\n                        </g>\n                      </svg>\n\n                    </span>\n                  </a>\n                ) : (\n                    <div className={styles.record_controller}>\n                      <a\n                        onClick={e => this.stopRecording(e)}\n                        href=\" #\"\n                        className={`${styles.icons} ${styles.stop}`}\n                      >\n                        <span className={styles.stop_icon}></span>\n                        {/* <img src={stopIcon} width={20} height={20} alt=\"Stop icons\" /> */}\n\n                        {/* <span className={`${styles.icons} ${styles.FaStop}`}></span> */}\n                      </a>\n                      <a\n                        onClick={\n                          !pauseRecord\n                            ? e => this.handleAudioPause(e)\n                            : e => this.handleAudioStart(e)\n                        }\n                        href=\" #\"\n                        className={`${styles.icons} ${styles.pause}`}\n                      >\n                        {pauseRecord ?\n                          <span className={styles.play_icons}></span> :\n                          <span className={styles.pause_icons}></span>}\n                      </a>\n                    </div>\n                  )}\n              </div>\n            ) : (\n                <p style={{ color: \"#fff\", marginTop: 30, fontSize: 25 }}>\n                  Seems the site is Non-SSL\n                </p>\n              )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recorder;\n\nRecorder.defaultProps = {\n  hideHeader: false\n}"]},"metadata":{},"sourceType":"module"}