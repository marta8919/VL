{"ast":null,"code":"var _jsxFileName = \"/Users/marta.gilabert.guzman/Desktop/VoiceLine/src/components/Recording.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Recorder } from 'react-voice-recorder';\nimport 'react-voice-recorder/dist/index.css'; // class Recording extends Component {\n//     state = {\n//         audioDetails: {\n//             url: null,\n//             blob: null,\n//             chunks: null,\n//             duration: {\n//               h: 0,\n//               m: 0,\n//               s: 0\n//             }\n//           }\n//     }\n//     handleAudioStop(data){\n//         this.setState({ audioDetails: data });\n//     }\n//     handleRest() {\n//         const reset = {\n//           url: null,\n//           blob: null,\n//           chunks: null,\n//           duration: {\n//             h: 0,\n//             m: 0,\n//             s: 0\n//           }\n//         };\n//         this.setState({ audioDetails: reset });\n//       }\n//   render() {\n//     return (\n//       <div>\n//         <Recorder\n//         record={true}\n//         audioURL={this.state.audioDetails.url}\n//         showUIAudio\n//         handleAudioStop={data => this.handleAudioStop(data)}\n//         handleRest={() => this.handleRest()} \n//         />\n//       </div>\n//     )\n//   }\n// }\n// export default Recording;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Recording(props) {\n  _s();\n\n  const [rec, setRec] = useState({\n    audioDetails: {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    }\n  });\n\n  const handleAudioStop = data => {\n    setRec({\n      audioDetails: data\n    });\n    console.log(rec);\n  };\n\n  const handleRest = () => {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    };\n    setRec({\n      audioDetails: reset\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Recorder, {\n      record: true,\n      audioURL: props.audioDetails.url,\n      showUIAudio: true,\n      handleAudioStop: data => handleAudioStop(data),\n      handleRest: () => handleRest()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recording, \"ZxXAemHDsKU4OLSmA1MyHalv8pI=\");\n\n_c = Recording;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recording\");","map":{"version":3,"sources":["/Users/marta.gilabert.guzman/Desktop/VoiceLine/src/components/Recording.jsx"],"names":["React","useState","useEffect","Recorder","Recording","props","rec","setRec","audioDetails","url","blob","chunks","duration","h","m","s","handleAudioStop","data","console","log","handleRest","reset"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,OAAO,qCAAP,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAIA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEvC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC;AAC7BO,IAAAA,YAAY,EAAC;AACXC,MAAAA,GAAG,EAAE,IADM;AAELC,MAAAA,IAAI,EAAE,IAFD;AAGLC,MAAAA,MAAM,EAAE,IAHH;AAILC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,CAAC,EAAE,CADK;AAERC,QAAAA,CAAC,EAAE,CAFK;AAGRC,QAAAA,CAAC,EAAE;AAHK;AAJL;AADgB,GAAD,CAA9B;;AAcA,QAAMC,eAAe,GAAIC,IAAD,IAAU;AAChCV,IAAAA,MAAM,CAAC;AAAEC,MAAAA,YAAY,EAAES;AAAhB,KAAD,CAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;AACD,GAHD;;AAMF,QAAMc,UAAU,GAAG,MAAM;AACrB,UAAMC,KAAK,GAAG;AACZZ,MAAAA,GAAG,EAAE,IADO;AAEZC,MAAAA,IAAI,EAAE,IAFM;AAGZC,MAAAA,MAAM,EAAE,IAHI;AAIZC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,CAAC,EAAE,CADK;AAERC,QAAAA,CAAC,EAAE,CAFK;AAGRC,QAAAA,CAAC,EAAE;AAHK;AAJE,KAAd;AAUAR,IAAAA,MAAM,CAAC;AAAEC,MAAAA,YAAY,EAAEa;AAAhB,KAAD,CAAN;AACD,GAZH;;AAcE,sBAEE;AAAA,2BACA,QAAC,QAAD;AACA,MAAA,MAAM,EAAE,IADR;AAEA,MAAA,QAAQ,EAAEhB,KAAK,CAACG,YAAN,CAAmBC,GAF7B;AAGA,MAAA,WAAW,MAHX;AAIA,MAAA,eAAe,EAAEQ,IAAI,IAAID,eAAe,CAACC,IAAD,CAJxC;AAKA,MAAA,UAAU,EAAE,MAAMG,UAAU;AAL5B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFF;AAcD;;GAlDuBhB,S;;KAAAA,S","sourcesContent":["import { React, useState, useEffect} from 'react'\nimport {Recorder} from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\n\n// class Recording extends Component {\n\n//     state = {\n//         audioDetails: {\n//             url: null,\n//             blob: null,\n//             chunks: null,\n//             duration: {\n//               h: 0,\n//               m: 0,\n//               s: 0\n//             }\n//           }\n//     }\n\n//     handleAudioStop(data){\n//         this.setState({ audioDetails: data });\n//     }\n\n\n//     handleRest() {\n//         const reset = {\n//           url: null,\n//           blob: null,\n//           chunks: null,\n//           duration: {\n//             h: 0,\n//             m: 0,\n//             s: 0\n//           }\n//         };\n//         this.setState({ audioDetails: reset });\n//       }\n \n//   render() {\n \n//     return (\n//       <div>\n//         <Recorder\n//         record={true}\n//         audioURL={this.state.audioDetails.url}\n//         showUIAudio\n//         handleAudioStop={data => this.handleAudioStop(data)}\n//         handleRest={() => this.handleRest()} \n//         />\n//       </div>\n//     )\n//   }\n// }\n\n// export default Recording;\n\n\n\nexport default function Recording(props) {\n\n  const [rec, setRec] = useState({\n    audioDetails:{\n      url: null,\n            blob: null,\n            chunks: null,\n            duration: {\n              h: 0,\n              m: 0,\n              s: 0\n          }\n    }     \n  });\n\n\n  const handleAudioStop = (data) => {\n    setRec({ audioDetails: data })\n    console.log(rec)\n  }\n\n\nconst handleRest = () => {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    };\n    setRec({ audioDetails: reset })\n  }\n\n  return (\n\n    <div>\n    <Recorder\n    record={true}\n    audioURL={props.audioDetails.url}\n    showUIAudio\n    handleAudioStop={data => handleAudioStop(data)}\n    handleRest={() => handleRest()} \n    />\n  </div>\n\n  \n  )\n}\n"]},"metadata":{},"sourceType":"module"}