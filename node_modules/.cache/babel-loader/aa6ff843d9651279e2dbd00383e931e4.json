{"ast":null,"code":"var _jsxFileName = \"/Users/marta.gilabert.guzman/Desktop/VoiceLine/challenge/src/components/Recording.jsx\";\nimport React, { Component } from 'react';\nimport { Recorder } from 'react-voice-recorder';\nimport 'react-voice-recorder/dist/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Recording extends Component {\n  render() {\n    //     state = {\n    //         audioDetails = {\n    //         url: null,\n    //         blob: null,\n    //         chunks: null,\n    //         duration: {\n    //         h: null,\n    //         m: null,\n    //         s: null,\n    //         }\n    //         }\n    //         }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n} // export default class Recording extends Component {\n//     state = {\n//         audioDetails = {\n//         url: null,\n//         blob: null,\n//         chunks: null,\n//         duration: {\n//         h: null,\n//         m: null,\n//         s: null,\n//         }\n//         }\n//         }\n//         handleAudioStop(data){\n//             console.log(data)\n//             this.setState({ audioDetails: data });\n//             }\n//             handleAudioUpload(file) {\n//             console.log(file);\n//             }\n//             handleRest(){\n//             const reset = {\n//             url: null,\n//             blob: null,\n//             chunks: null,\n//             duration: {,\n//             h: null,\n//             m: null,\n//             s: null,\n//             }\n//             }\n//             this.setState({ audioDetails: reset });\n//             }\n//     render() {\n//         return (\n//             <div>\n//                 <Recorder\n//                     record={true}\n//                     title={\"New recording\"}\n//                     audioURL={this.state.audioDetails.url}\n//                     showUIAudio\n//                     handleAudioStop={data => this.handleAudioStop(data)}\n//                     handleOnChange={(value) => this.handleOnChange(value, 'firstname')}\n//                     handleAudioUpload={data => this.handleAudioUpload(data)}\n//                     handleRest={() => this.handleRest()} />\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/marta.gilabert.guzman/Desktop/VoiceLine/challenge/src/components/Recording.jsx"],"names":["React","Component","Recorder","Recording","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,OAAO,qCAAP;;AAGA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC7CG,EAAAA,MAAM,GAAG;AACL;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnB4C,C,CAuBjD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport React, { Component } from 'react'\nimport {Recorder} from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\n\n\nexport default class Recording extends Component {\n    render() {\n        //     state = {\n//         audioDetails = {\n//         url: null,\n//         blob: null,\n//         chunks: null,\n//         duration: {\n//         h: null,\n//         m: null,\n//         s: null,\n//         }\n//         }\n//         }\n        return (\n            <div>\n                Recording\n            </div>\n        )\n    }\n}\n\n\n// export default class Recording extends Component {\n\n//     state = {\n//         audioDetails = {\n//         url: null,\n//         blob: null,\n//         chunks: null,\n//         duration: {\n//         h: null,\n//         m: null,\n//         s: null,\n//         }\n//         }\n//         }\n\n//         handleAudioStop(data){\n//             console.log(data)\n//             this.setState({ audioDetails: data });\n//             }\n//             handleAudioUpload(file) {\n//             console.log(file);\n//             }\n//             handleRest(){\n//             const reset = {\n//             url: null,\n//             blob: null,\n//             chunks: null,\n//             duration: {,\n//             h: null,\n//             m: null,\n//             s: null,\n//             }\n//             }\n//             this.setState({ audioDetails: reset });\n//             }\n\n//     render() {\n//         return (\n//             <div>\n//                 <Recorder\n//                     record={true}\n//                     title={\"New recording\"}\n//                     audioURL={this.state.audioDetails.url}\n//                     showUIAudio\n//                     handleAudioStop={data => this.handleAudioStop(data)}\n//                     handleOnChange={(value) => this.handleOnChange(value, 'firstname')}\n//                     handleAudioUpload={data => this.handleAudioUpload(data)}\n//                     handleRest={() => this.handleRest()} />\n//             </div>\n//         )\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}