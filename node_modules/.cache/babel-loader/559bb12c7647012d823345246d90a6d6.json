{"ast":null,"code":"var _jsxFileName = \"/Users/marta.gilabert.guzman/Desktop/VoiceLine/challenge/src/components/Recording.jsx\";\nimport React, { Component } from 'react';\nimport { Recorder } from 'react-voice-recorder'; // import 'react-voice-recorder/dist/index.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Recording extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      audioDetails: {\n        url: null,\n        blob: null,\n        chunks: null,\n        duration: {\n          h: 0,\n          m: 0,\n          s: 0\n        }\n      }\n    };\n  }\n\n  handleAudioStop(data) {\n    // console.log(data)\n    this.setState({\n      audioDetails: data\n    });\n  } // handleAudioUpload(file) {\n  //     console.log(file);\n  // }\n\n\n  handleRest() {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    };\n    this.setState({\n      audioDetails: reset\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Recorder, {\n        record: true // title={\"Record your note\"}\n        ,\n        audioURL: this.state.audioDetails.url,\n        showUIAudio: true,\n        handleAudioStop: data => this.handleAudioStop(data) // handleAudioUpload={data => this.handleAudioUpload(data)}\n        ,\n        handleRest: () => this.handleRest()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Recording;","map":{"version":3,"sources":["/Users/marta.gilabert.guzman/Desktop/VoiceLine/challenge/src/components/Recording.jsx"],"names":["React","Component","Recorder","Recording","state","audioDetails","url","blob","chunks","duration","h","m","s","handleAudioStop","data","setState","handleRest","reset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,sBAAvB,C,CACA;;;;AAGA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BG,KAF8B,GAEtB;AACJC,MAAAA,YAAY,EAAE;AACVC,QAAAA,GAAG,EAAE,IADK;AAEVC,QAAAA,IAAI,EAAE,IAFI;AAGVC,QAAAA,MAAM,EAAE,IAHE;AAIVC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,CAAC,EAAE,CADK;AAERC,UAAAA,CAAC,EAAE,CAFK;AAGRC,UAAAA,CAAC,EAAE;AAHK;AAJA;AADV,KAFsB;AAAA;;AAe9BC,EAAAA,eAAe,CAACC,IAAD,EAAM;AACjB;AACA,SAAKC,QAAL,CAAc;AAAEV,MAAAA,YAAY,EAAES;AAAhB,KAAd;AACH,GAlB6B,CAoB9B;AACA;AACA;;;AAEAE,EAAAA,UAAU,GAAG;AACT,UAAMC,KAAK,GAAG;AACZX,MAAAA,GAAG,EAAE,IADO;AAEZC,MAAAA,IAAI,EAAE,IAFM;AAGZC,MAAAA,MAAM,EAAE,IAHI;AAIZC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,CAAC,EAAE,CADK;AAERC,QAAAA,CAAC,EAAE,CAFK;AAGRC,QAAAA,CAAC,EAAE;AAHK;AAJE,KAAd;AAUA,SAAKG,QAAL,CAAc;AAAEV,MAAAA,YAAY,EAAEY;AAAhB,KAAd;AACD;;AAELC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,6BACE,QAAC,QAAD;AACA,QAAA,MAAM,EAAE,IADR,CAEA;AAFA;AAGA,QAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWC,YAAX,CAAwBC,GAHlC;AAIA,QAAA,WAAW,MAJX;AAKA,QAAA,eAAe,EAAEQ,IAAI,IAAI,KAAKD,eAAL,CAAqBC,IAArB,CALzB,CAMA;AANA;AAOA,QAAA,UAAU,EAAE,MAAM,KAAKE,UAAL;AAPlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AArD+B;;AAwDlC,eAAeb,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Recorder} from 'react-voice-recorder'\n// import 'react-voice-recorder/dist/index.css'\n \n\nclass Recording extends Component {\n\n    state = {\n        audioDetails: {\n            url: null,\n            blob: null,\n            chunks: null,\n            duration: {\n              h: 0,\n              m: 0,\n              s: 0\n            }\n          }\n    }\n\n    handleAudioStop(data){\n        // console.log(data)\n        this.setState({ audioDetails: data });\n    }\n\n    // handleAudioUpload(file) {\n    //     console.log(file);\n    // }\n\n    handleRest() {\n        const reset = {\n          url: null,\n          blob: null,\n          chunks: null,\n          duration: {\n            h: 0,\n            m: 0,\n            s: 0\n          }\n        };\n        this.setState({ audioDetails: reset });\n      }\n \n  render() {\n \n    return (\n      <div>\n        <Recorder\n        record={true}\n        // title={\"Record your note\"}\n        audioURL={this.state.audioDetails.url}\n        showUIAudio\n        handleAudioStop={data => this.handleAudioStop(data)}\n        // handleAudioUpload={data => this.handleAudioUpload(data)}\n        handleRest={() => this.handleRest()} \n        />\n      </div>\n    )\n  }\n}\n\nexport default Recording;"]},"metadata":{},"sourceType":"module"}